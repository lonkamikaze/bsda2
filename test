#!/bin/sh

#
# Executes the given tests.
#
# Glob patterns are matched against the tests in `tests/`.
#
# Execute without arguments to run all tests or list specific tests.
#
# Returns the number of failed tests.
#

dir="${0%${0##*/}}"
cd "${dir%/}/tests" || return 1

# Match all tests when no arguments are given
if [ $# -eq 0 ]; then
	set -- *
fi

# Inject into bash, because LINENO in `bash -c` is off by one
nl=$'\n'

fails=0
for test in $@; do
	# Remove folder component
	test="${test##*/}"

	# Skip hidden files, `.` and `..`
	if [ -z "${test##.*}" ]; then
		echo "Failed: skipping ${test}"
		fails=$((fails + 1))
		continue
	fi

	# Need to exist, needs read access
	if [ ! -r "$test" ]; then
		echo "Failed: cannot access ${test}"
		fails=$((fails + 1))
		continue
	fi

	# Inject bsda:test and add `|| bsda:test:err $LINENO` to every line
	code="bsda_dir='../src';readonly bsda_dir;. ../src/bsda_test.sh;$(
		awk -f../src/testify.awk "$test")" || return 1
	echo "Running: sh $test"
	if sh -c "$code"; then
		echo "Passed: sh $test"
	else
		echo "Failed: sh $test"
		fails=$((fails + 1))
	fi
	which bash >&- || continue
	echo "Running: bash $test"
	if bash -c "$nl$code"; then
		echo "Passed: bash $test"
	else
		echo "Failed: bash $test"
		fails=$((fails + 1))
	fi
done
if [ $fails -ne 0 ]; then
	echo "Test runs failed: $fails"
fi
exit $fails
